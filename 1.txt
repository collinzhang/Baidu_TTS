A complexity allowed in XML, and not in INI, is the idea that a tag can have attributes in the form of a parameter-value pair, such as . Thus, an XML tag with attributes and no element data is essentially the same as an INI section. Note that other tools have been written for LabVIEW that, in my opinion, do a better job with XML that the built-in tools. Specifically, the LabVIEW flatten and unflatten to XML tools error if the cluster does not match the contents of an XML file created from a prior version of the cluster, as often happens when application versions update configuration information.

Other tools handle these version changes more gracefully. For example, look at the GXML Reference Library from NI. This Reference Lib handles changes in the cluster content if you read into a cluster with additional elements than the XML contains, but errors when the XML has more elements than the receiving cluster. Plus, the label on the cluster needs to match the XML, since the cluster label is part of the XML content. The JKI EasyXML toolkit handles both directions without errors and does not require clusters to have the same label.

Support for JSON is new to LabVIEW 2013, although JSON has been supported in LabVIEW for a while. The JSON VIs follow the simple flatten-to and unflatten-from XML that have been in LabVIEW for a few version. They are located in the ¡®Programming >> String >> Flatten/Unflatten String¡¯ palette. JSON is popular because of its support in JAVA. An example follows.